#define CHEAT_FLAGHACK   1
#define CHEAT_EDITHACK   2
#define CHEAT_WRONGGUN   3
#define CHEAT_INSTAGUN   4
#define CHEAT_EXPLOSION  5
#define CHEAT_NOAMMO     6
#define CHEAT_FASTRELOAD 7
#define CHEAT_NOTALIVE   8
#define CHEAT_NORAYS     9
#define CHEAT_GUNRANGE   10
#define CHEAT_GUNRAYS    11
#define CHEAT_PICKUP     12

struct Cheater
{
    uint IP;
};
vector <Cheater> Cheaters;

void AddPban (uint ip)
{
    loopv (Cheaters)
    {
        if (Cheaters [i].IP == ip) return;
    }
    Cheater & Pban = Cheaters.add ();
    Pban.IP = ip;
}

ICOMMAND (pban, "i", (uint * IP), AddPban (* IP));

void Bancheater (clientinfo * ci, const char * Cheat)
{
    const char * Name = ci->name;
    int Cn = ci->clientnum;
    Cheater & Cur = Cheaters.add ();
    Cur.IP = getclientip (ci->clientnum);
    sendservmsgf ("\f3%s \f4Client \f0%s \f4(\f0%s\f4) has been disconnected for cheating \f4(\f3%s\f4). \f3%s",
        MessageDecoration1,
        Name,
        getclienthostname (Cn),
        Cheat,
        MessageDecoration2
    );
    logoutf ("%s Client %s (%s) has been disconnected for cheating (%s). %s",
        MessageDecoration1,
        Name,
        getclienthostname (Cn),
        Cheat,
        MessageDecoration2
    );
    stream *f = openutf8file(cheatfile, "w");
    if(f)
    {
        f->printf("// Automatically generated by HaythServ-v2.0 - do not edit.\n");
        f->printf("// Contains a list of permamently banned cheaters.\n");
        f->printf("// Also contains a list of other permamently banned clients using #pban <cn>.\n\n");
        loopv (Cheaters)
        {
            defformatstring (Message)("pban %i\n", 
                Cheaters [i].IP
            );
            f->printf (Message);
        }
        delete f;
    }
    disconnect_client (ci->clientnum, DISC_IPBAN);
}

int cheater (clientinfo * cq, int Cheat)
{
    clientinfo * ci;
    if (cq->state.aitype == AI_NONE)
    {
        ci = cq;
    }
    else
    {
        ci = (clientinfo *) getclientinfo (cq->ownernum);
    }
    switch (Cheat)
    {
        case CHEAT_FLAGHACK:
            Bancheater (ci, "flag hack");
            break;
        case CHEAT_EDITHACK:
            Bancheater (ci, "edit mode in non coop-edit gamemode");
            break;
        case CHEAT_WRONGGUN:
            Bancheater (ci, "wrong gun");
            break;
        case CHEAT_INSTAGUN:
            Bancheater (ci, "non instagib weapon");
            break;
        case CHEAT_EXPLOSION:
            Bancheater (ci, "explosion hack");
            break;
        case CHEAT_NOAMMO:
            Bancheater (ci, "no ammo");
            break;
        case CHEAT_FASTRELOAD:
            Bancheater (ci, "modified weapon reload time");
            break;
        case CHEAT_NOTALIVE:
            Bancheater (ci, "trying to shoot without being alive");
            break;
        case CHEAT_NORAYS:
            Bancheater (ci, "disabled gun rays");
            break;
        case CHEAT_GUNRANGE:
            Bancheater (ci, "modified gun range");
            break;
        case CHEAT_GUNRAYS:
            Bancheater (ci, "modified gun rays");
            break;
        case CHEAT_PICKUP:
            Bancheater (ci, "trying to pickup an item in a m_noitems gamemode");
            break;
        default:
            return 0;
    }
    return Cheat;
}